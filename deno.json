{
  "compilerOptions": {
    "strict": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true
  },
  "imports": {
    "@std/fs@^1": "jsr:@std/fs",
    "@std/fs@^1/": "jsr:/@std/fs/",
    "@std/path@^1": "jsr:@std/path",
    "@std/path@^1/": "jsr:/@std/path/",
    "@std/archive": "jsr:@std/archive@^1.0.0",
    "@std/archive/": "jsr:/@std/archive@^1.0.0/",
    "@std/assert": "jsr:@std/assert@^1.0.0",
    "@std/assert/": "jsr:/@std/assert@^1.0.0/",
    "@std/async": "jsr:@std/async@^1.0.0",
    "@std/async/": "jsr:/@std/async@^1.0.0/",
    "@std/bytes": "jsr:@std/bytes@^1.0.0",
    "@std/bytes/": "jsr:/@std/bytes@^1.0.0/",
    "@std/cli": "jsr:@std/cli@^1.0.0",
    "@std/cli/": "jsr:/@std/cli@^1.0.0/",
    "@std/collections": "jsr:@std/collections@^1.0.0",
    "@std/collections/": "jsr:/@std/collections@^1.0.0/",
    "@std/console": "jsr:@std/console@^1.0.0",
    "@std/console/": "jsr:/@std/console@^1.0.0/",
    "@std/crypto": "jsr:@std/crypto@^1.0.0",
    "@std/crypto/": "jsr:/@std/crypto@^1.0.0/",
    "@std/csv": "jsr:@std/csv@^1.0.0",
    "@std/csv/": "jsr:/@std/csv@^1.0.0/",
    "@std/data_structures": "jsr:@std/data_structures@^1.0.0",
    "@std/data_structures/": "jsr:/@std/data_structures@^1.0.0/",
    "@std/datetime": "jsr:@std/datetime@^1.0.0",
    "@std/datetime/": "jsr:/@std/datetime@^1.0.0/",
    "@std/dotenv": "jsr:@std/dotenv@^1.0.0",
    "@std/dotenv/": "jsr:/@std/dotenv@^1.0.0/",
    "@std/encoding": "jsr:@std/encoding@^1.0.0",
    "@std/encoding/": "jsr:/@std/encoding@^1.0.0/",
    "@std/flags": "jsr:@std/flags@^1.0.0",
    "@std/flags/": "jsr:/@std/flags@^1.0.0/",
    "@std/fmt": "jsr:@std/fmt@^1.0.0",
    "@std/fmt/": "jsr:/@std/fmt@^1.0.0/",
    "@std/front_matter": "jsr:@std/front_matter@^1.0.0",
    "@std/front_matter/": "jsr:/@std/front_matter@^1.0.0/",
    "@std/fs": "jsr:@std/fs@^1.0.0",
    "@std/fs/": "jsr:/@std/fs@^1.0.0/",
    "@std/html": "jsr:@std/html@^1.0.0",
    "@std/html/": "jsr:/@std/html@^1.0.0/",
    "@std/http": "jsr:@std/http@^1.0.0",
    "@std/http/": "jsr:/@std/http@^1.0.0/",
    "@std/io": "jsr:@std/io@^1.0.0",
    "@std/io/": "jsr:/@std/io@^1.0.0/",
    "@std/json": "jsr:@std/json@^1.0.0",
    "@std/json/": "jsr:/@std/json@^1.0.0/",
    "@std/jsonc": "jsr:@std/jsonc@^1.0.0",
    "@std/jsonc/": "jsr:/@std/jsonc@^1.0.0/",
    "@std/log": "jsr:@std/log@^1.0.0",
    "@std/log/": "jsr:/@std/log@^1.0.0/",
    "@std/media_types": "jsr:@std/media_types@^1.0.0",
    "@std/media_types/": "jsr:/@std/media_types@^1.0.0/",
    "@std/msgpack": "jsr:@std/msgpack@^1.0.0",
    "@std/msgpack/": "jsr:/@std/msgpack@^1.0.0/",
    "@std/path": "jsr:@std/path@^1.0.0",
    "@std/path/": "jsr:/@std/path@^1.0.0/",
    "@std/permissions": "jsr:@std/permissions@^1.0.0",
    "@std/permissions/": "jsr:/@std/permissions@^1.0.0/",
    "@std/regexp": "jsr:@std/regexp@^1.0.0",
    "@std/regexp/": "jsr:/@std/regexp@^1.0.0/",
    "@std/semver": "jsr:@std/semver@^1.0.0",
    "@std/semver/": "jsr:/@std/semver@^1.0.0/",
    "@std/signal": "jsr:@std/signal@^1.0.0",
    "@std/signal/": "jsr:/@std/signal@^1.0.0/",
    "@std/streams": "jsr:@std/streams@^1.0.0",
    "@std/streams/": "jsr:/@std/streams@^1.0.0/",
    "@std/testing": "jsr:@std/testing@^1.0.0",
    "@std/testing/": "jsr:/@std/testing@^1.0.0/",
    "@std/text": "jsr:@std/text@^1.0.0",
    "@std/text/": "jsr:/@std/text@^1.0.0/",
    "@std/toml": "jsr:@std/toml@^1.0.0",
    "@std/toml/": "jsr:/@std/toml@^1.0.0/",
    "@std/ulid": "jsr:@std/ulid@^1.0.0",
    "@std/ulid/": "jsr:/@std/ulid@^1.0.0/",
    "@std/url": "jsr:@std/url@^1.0.0",
    "@std/url/": "jsr:/@std/url@^1.0.0/",
    "@std/uuid": "jsr:@std/uuid@^1.0.0",
    "@std/uuid/": "jsr:/@std/uuid@^1.0.0/",
    "@std/yaml": "jsr:@std/yaml@^1.0.0",
    "@std/yaml/": "jsr:/@std/yaml@^1.0.0/",
    "deno_graph": "https://deno.land/x/deno_graph@0.60.0/mod.ts",
    "deno_doc": "https://deno.land/x/deno_doc@0.73.0/mod.ts",
    "npm:/typescript": "npm:typescript@5.2.2",
    "automation/": "https://raw.githubusercontent.com/denoland/automation/0.10.0/"
  },
  "tasks": {
    "test": "deno test --doc --unstable --allow-all --parallel --coverage=./cov --trace-ops",
    "test:browser": "git grep --name-only \"This module is browser compatible.\" | grep -v deno.json | grep -v .github/workflows | grep -v _tools | xargs deno check --config browser-compat.tsconfig.json",
    "fmt:licence-headers": "deno run --allow-read --allow-write ./_tools/check_licence.ts",
    "lint:deprecations": "deno run --allow-read --allow-net --allow-env=HOME ./_tools/check_deprecation.ts",
    "lint:doc-imports": "deno run --allow-env --allow-read ./_tools/check_doc_imports.ts",
    "lint:circular": "deno run --allow-env --allow-read --allow-net=deno.land ./_tools/check_circular_submodule_dependencies.ts",
    "lint:tools-types": "deno check _tools/*.ts",
    "lint": "deno lint && deno task fmt:licence-headers --check && deno task lint:deprecations && deno task lint:doc-imports && deno task lint:circular && deno task lint:tools-types",
    "typos": "typos -c ./.github/workflows/typos.toml",
    "build:crypto": "deno task --cwd crypto/_wasm wasmbuild",
    "wasmbuild": "deno run --unstable -A https://deno.land/x/wasmbuild@0.15.0/main.ts --js-ext mjs --sync",
    "cov:clean": "rm -rf cov html_cov cov.lcov",
    "cov:gen": "deno coverage ./cov/ --lcov --output=cov.lcov",
    "cov:view": "genhtml --ignore-errors unmapped -o html_cov cov.lcov && open html_cov/index.html",
    "ok": "deno task lint && deno fmt --check && deno task test:browser && deno task test"
  },
  "exclude": [
    ".git",
    "crypto/_wasm/target",
    "cov",
    "jsonc/testdata",
    "front_matter/testdata"
  ],
  "workspaces": [
    "archive",
    "assert",
    "async",
    "bytes",
    "cli",
    "collections",
    "console",
    "crypto",
    "csv",
    "data_structures",
    "datetime",
    "dotenv",
    "encoding",
    "flags",
    "fmt",
    "front_matter",
    "fs",
    "html",
    "http",
    "io",
    "json",
    "jsonc",
    "log",
    "media_types",
    "msgpack",
    "path",
    "permissions",
    "regexp",
    "semver",
    "signal",
    "streams",
    "testing",
    "text",
    "toml",
    "ulid",
    "url",
    "uuid",
    "yaml"
  ]
}
